## cleanupFunction.vm

## Variables
## $cacheDir, $cacheFile

function cleanup {
    unmountGfal          #unmount all gfal munted directories
    startLog cleanup
    info "=== ls -a ==="
    ls -a
    info "=== ls $cacheDir/$cacheFile ==="
    ls $cacheDir/$cacheFile
    info "=== cat $cacheDir/$cacheFile === "
    cat $cacheDir/$cacheFile
    info "Cleaning up: rm * -Rf"
    \rm * -Rf
    if [ "${BACKPID}" != "" ]
    then
        for i in `ps --ppid ${BACKPID} -o pid | grep -v PID`
        do
            info "Killing child of background script (pid ${i})"
            kill -9 ${i}
        done
        info "Killing background script (pid ${BACKPID})"
        kill -9 ${BACKPID}
    fi
    info "END date:"
    date +%s
    stopLog cleanup
}


#exit function for any interruptions
function exitfn () { 
    cleanup 
    #in case of second (or multiple) inturruptions while the 'exitfn' function being executed, 'cleanup' function is executed until 'unmountGfal' function converges to 1(true)
    trap -- '' SIGINT SIGTERM #interruption is disabled 
    while [[ $unmountGfal -eq 1 ]]   
    do
        echo $unmountGfal
        sleep 2
        cleanup
    done
    echo ABORT
    exit                  #   then exit script.
}

trap "exitfn" INT